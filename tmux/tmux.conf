#--------------------------------------------------------------------------
# Configuration
#--------------------------------------------------------------------------

# Use Vi mode
setw -g mode-keys vi

# Increase scrollback buffer size
set -g history-limit 10000

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# # Allow automatic renaming of windows
# set -g allow-rename on

# rename panes to current working directory
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Renumber windows when one is removed.
set -g renumber-windows on

# Enable undercurl
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
# set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Enable hyperlinks
# set -as terminal-overrides ',*:Hls=\E]8;id=%p1%s;%p2%s\E\\:Hlr=\E]8;;\E\\'

set -g default-terminal 'screen-256color'
set -sa terminal-features ',xterm-256color:RGB'

# Allow the mouse to resize windows and select tabs
set -g mouse on

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

set-option -g default-shell /bin/zsh

#--------------------------------------------------------------------------
# Status line
#--------------------------------------------------------------------------

# # status - general
# set-environment -g COL_STATUS_FG "white"
# set-environment -g COL_STATUS_BG "#434f55"
# set-environment -g COL_MESSAGE_FG "black"
# set-environment -g COL_MESSAGE_BG "#d3c6aa"

# # status line from left to right
# set-environment -g COL_STATUS_SESSION_FG "brightwhite"
# set-environment -g COL_STATUS_SESSION_BG "#3f5868"
# set-environment -g COL_WINDOW_ACTIVE_FG "black"
# set-environment -g COL_WINDOW_ACTIVE_BG "green"
# set-environment -g COL_WINDOW_INACTIVE_FG "white"
# set-environment -g COL_WINDOW_INACTIVE_BG "#48584e"
# set-environment -g COL_STATUS_PREFIX_FG "black"
# set-environment -g COL_STATUS_PREFIX_BG "blue"
# set-environment -g COL_STATUS_DATETIME_FG "black"
# set-environment -g COL_STATUS_DATETIME_BG "yellow"
# set-environment -g COL_STATUS_HOSTNAME_FG "brightwhite"
# set-environment -g COL_STATUS_HOSTNAME_BG "#3f5868"

# # panes
# set-environment -g COL_PANE_ACTIVE_FG "yellow"
# set-environment -g COL_PANE_ACTIVE_BG "default"
# set-environment -g COL_PANE_INACTIVE_FG "brightblack"
# set-environment -g COL_PANE_INACTIVE_BG "default"
# set-environment -g COL_PANE_SYNC_FG "red"
# set-environment -g COL_PANE_SYNC_BG "default"
# set-environment -g COL_DISPLAY_PANES_ACTIVE "white"
# set-environment -g COL_DISPLAY_PANES_INACTIVE "black"

# # other
# set-environment -g COL_CLOCK "cyan"
# set-environment -g COL_CMATRIX "green"

# # Inspired by: https://github.com/arcticicestudio/nord-tmux

# #####################
# #### Options

# set-option -g status on
# set-option -g status-interval 1
# set-option -g display-panes-time 2000

# # Show matrix screensaver after 5 minutes idle
# set-option -g lock-after-time 300
# set-option -g lock-command "command -v cmatrix >/dev/null && cmatrix -b -a -u 3 -C ${COL_CMATRIX}"

# #####################
# #### Status

# # Layout
# set-option -g status-justify left

# # Colors (general)
# set-option -g status-style bg="#434f55 fg=white"

# # Bars
# set-option -g status-right-length 120
# set-option -g status-left "#[fg=${COL_STATUS_SESSION_FG},bg=${COL_STATUS_SESSION_BG}] #S #[fg=${COL_STATUS_SESSION_BG},bg=${COL_STATUS_BG},nobold,noitalics,nounderscore]"
# set-option -g status-right '#{prefix_highlight}#(eval "${DOTFILES_DIR}/theming/tmux/tmux-airline.sh" $(tmux display-message -p "#{client_width}"))'

# # Windows
# set-option -g window-status-format "#[fg=${COL_STATUS_BG},bg=${COL_WINDOW_INACTIVE_BG},nobold,noitalics,nounderscore] #[fg=${COL_WINDOW_INACTIVE_FG},bg=${COL_WINDOW_INACTIVE_BG}]#I #[fg=${COL_WINDOW_INACTIVE_FG},bg=${COL_WINDOW_INACTIVE_BG},nobold,noitalics,nounderscore] #[fg=${COL_WINDOW_INACTIVE_FG},bg=${COL_WINDOW_INACTIVE_BG}]#W #('${DOTFILES_DIR}/theming/tmux/window-flags' '#{window_flags}') #[fg=${COL_WINDOW_INACTIVE_BG},bg=${COL_STATUS_BG},nobold,noitalics,nounderscore]"
# set-option -g window-status-current-format "#[fg=${COL_STATUS_BG},bg=${COL_WINDOW_ACTIVE_BG},nobold,noitalics,nounderscore] #[fg=${COL_WINDOW_ACTIVE_FG},bg=${COL_WINDOW_ACTIVE_BG}]#I #[fg=${COL_WINDOW_ACTIVE_FG},bg=${COL_WINDOW_ACTIVE_BG},nobold,noitalics,nounderscore] #[fg=${COL_WINDOW_ACTIVE_FG},bg=${COL_WINDOW_ACTIVE_BG}]#W #('${DOTFILES_DIR}/theming/tmux/window-flags' '#{window_flags}') #[fg=${COL_WINDOW_ACTIVE_BG},bg=${COL_STATUS_BG},nobold,noitalics,nounderscore]"
# set-option -g window-status-separator ""

# #####################
# #### Plugins

# # tmux-prefix-highlight
# set-option -g @prefix_highlight_fg "${COL_STATUS_PREFIX_FG}"
# set-option -g @prefix_highlight_bg "${COL_STATUS_PREFIX_BG}"
# set-option -g @prefix_highlight_output_prefix "#[fg=${COL_STATUS_PREFIX_BG}]#[bg=${COL_STATUS_BG}]#[nobold]#[noitalics]#[nounderscore]#[bg=${COL_STATUS_PREFIX_BG}]#[fg=${COL_STATUS_PREFIX_FG}]"
# set-option -g @prefix_highlight_output_suffix "#[fg=${COL_STATUS_BG}]#[bg=${COL_STATUS_PREFIX_BG}]"
# set-option -g @prefix_highlight_copy_mode_attr "fg=${COL_STATUS_PREFIX_BG},bg=${COL_STATUS_PREFIX_FG},bold"

# #####################
# #### Messages

# set-option -g message-style bg="#d3c6aa fg=black"
# set-option -g message-command-style bg="#d3c6aa fg=black"

# #####################
# #### Panes

# set-option -g pane-active-border-style "#{?pane_synchronized,fg=$COL_PANE_SYNC_FG,fg=$COL_PANE_ACTIVE_FG}"
# set-option -ag pane-active-border-style "#{?pane_synchronized,bg=$COL_PANE_SYNC_BG,bg=$COL_PANE_ACTIVE_BG}"
# set-option -g pane-border-style bg="default fg=brightblack"

# set-option -g display-panes-colour "black"
# set-option -g display-panes-active-colour "white"

# #####################
# #### Clock

# set-option -g clock-mode-colour "cyan"


set-option -g status-left-length 100
set-option -g status-right-length 100
# set-option -g status-left " #{session_name}  "
set-option -g status-left " " # Screencast mode
set-option -g status-right "#{pane_title} "
set-option -g status-style "fg=#83C092 bg=#323D43"
# set-option -g window-status-format "#{window_index}:#{pane_current_command}#{window_flags} "
# set-option -g window-status-current-format "#{window_index}:#{pane_current_command}#{window_flags} "
set-option -g window-status-current-style "fg=#dbbC7F bg=#323D43"
set-option -g window-status-activity-style none

# Set the prefix to Ctrl+a
set -g prefix C-a

# Send prefix to a nested tmux session by doubling the prefix
# bind C-Space send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.config/tmux/tmux.conf\; display-message '~/.tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
# bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
# bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# bind-key > swap-window -t +1 \; next
# bind-key < swap-window -t -1 \; prev

# Switch between two most recently used windows
# bind Space last-window

# Switch between two most recently used sessions
# bind ^ switch-client -l

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    'bind-key -T copy-mode-vi v send-keys -X begin-selection;'

bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"
